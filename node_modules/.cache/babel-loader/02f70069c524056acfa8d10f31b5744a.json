{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\joeya\\\\Desktop\\\\code\\\\local-repos\\\\combat-tracker-front\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"./App.css\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Header from \"./components/ui/Header\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Container, Form, Button, Row, Col } from \"react-bootstrap\";\nimport SearchBar from \"./components/ui/SearchBar\";\nimport BestiaryGrid from \"./pages/beastiary/BestiaryGrid\";\nimport Footer from \"./components/ui/Footer\";\nimport API from \"./components/utils/API\";\nimport Landing from \"./components/landing/Landing\";\nimport NavigationBar from \"./components/ui/Navbar\";\nimport Campaigns from \"./pages/Campaigns\";\nimport CampaignDetail from \"./pages/CampaignDetail\";\nimport NewUser from \"./pages/NewUser\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  // login state\n  const [loginFormState, setloginFormState] = useState({\n    email: \"\",\n    password: \"\"\n  });\n  const [profileState, setProfileState] = useState({\n    name: \"\",\n    email: \"\",\n    campaigns: [],\n    token: \"\",\n    id: \"\",\n    isLoggedIn: false\n  });\n  useEffect(fetchUserData, []);\n\n  function fetchUserData() {\n    const token = localStorage.getItem(\"token\");\n    API.getProfile(token).then(profileData => {\n      if (profileData) {\n        setProfileState({\n          name: profileData.name,\n          email: profileData.email,\n          campaigns: profileData.Campaigns,\n          encounters: profileData.Encounters,\n          token: token,\n          id: profileData.id,\n          isLoggedIn: true\n        });\n      } else {\n        localStorage.removeItem(\"token\");\n        setProfileState({\n          name: \"\",\n          email: \"\",\n          campaigns: [],\n          token: \"\",\n          id: \"\",\n          isLoggedIn: false\n        });\n      }\n    });\n  }\n\n  const inputChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setloginFormState({ ...loginFormState,\n      [name]: value\n    });\n  };\n\n  const formSubmit = event => {\n    event.preventDefault();\n    API.login(loginFormState).then(newToken => {\n      localStorage.setItem(\"token\", newToken.token);\n      API.getProfile(newToken.token).then(profileData => {\n        setProfileState({\n          name: profileData.name,\n          email: profileData.email,\n          campaigns: profileData.Campaigns,\n          id: profileData.id,\n          isLoggedIn: true\n        });\n      });\n    });\n  };\n\n  const deleteCampaign = id => {\n    API.deleteCampaign(profileState.token, id).then(data => {\n      fetchUserData();\n    });\n  }; // State for Beastiary Cards\n\n\n  const [monsters, setMonsters] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [query, setQuery] = useState(\"\");\n  useEffect(() => {\n    const fetchItems = async () => {\n      const res = await axios( // `https://combattracker-api.herokuapp.com/api/monsters`\n      `http://localhost:5000/api/monsters`);\n      setMonsters(res.data);\n      setIsLoading(false);\n    };\n\n    fetchItems();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: [/*#__PURE__*/_jsxDEV(NavigationBar, {\n        profile: profileState,\n        logout: logout\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"background\",\n        children: [/*#__PURE__*/_jsxDEV(Container, {\n          className: \"container\",\n          children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/\",\n            children: profileState.isLoggedIn ? /*#__PURE__*/_jsxDEV(Campaigns, {\n              profile: profileState,\n              fetchData: fetchUserData,\n              delCampaign: deleteCampaign\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(Landing, {\n              profile: profileState,\n              inputChange: inputChange,\n              loginFormState: loginFormState,\n              formSubmit: formSubmit\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/beastiary\",\n            children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n              getQuery: q => setQuery(q)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"body-bg\",\n              children: /*#__PURE__*/_jsxDEV(BestiaryGrid, {\n                isLoading: isLoading,\n                monsters: monsters,\n                query: query\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/campaigns/:id\",\n            children: /*#__PURE__*/_jsxDEV(CampaignDetail, {\n              profile: profileState\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/newuser\",\n            children: /*#__PURE__*/_jsxDEV(NewUser, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"nbiDMLbvMhovLaf6KDyabcTzGZs=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/joeya/Desktop/code/local-repos/combat-tracker-front/src/App.js"],"names":["React","useState","useEffect","axios","BrowserRouter","Router","Route","Switch","Header","Container","Form","Button","Row","Col","SearchBar","BestiaryGrid","Footer","API","Landing","NavigationBar","Campaigns","CampaignDetail","NewUser","App","loginFormState","setloginFormState","email","password","profileState","setProfileState","name","campaigns","token","id","isLoggedIn","fetchUserData","localStorage","getItem","getProfile","then","profileData","encounters","Encounters","removeItem","inputChange","event","value","target","formSubmit","preventDefault","login","newToken","setItem","deleteCampaign","data","monsters","setMonsters","isLoading","setIsLoading","query","setQuery","fetchItems","res","logout","q"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"./App.css\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Header from \"./components/ui/Header\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Container, Form, Button, Row, Col } from \"react-bootstrap\";\nimport SearchBar from \"./components/ui/SearchBar\";\nimport BestiaryGrid from \"./pages/beastiary/BestiaryGrid\";\nimport Footer from \"./components/ui/Footer\";\nimport API from \"./components/utils/API\";\nimport Landing from \"./components/landing/Landing\";\nimport NavigationBar from \"./components/ui/Navbar\";\nimport Campaigns from \"./pages/Campaigns\";\nimport CampaignDetail from \"./pages/CampaignDetail\";\nimport NewUser from \"./pages/NewUser\";\n\nfunction App() {\n  // login state\n  const [loginFormState, setloginFormState] = useState({\n    email: \"\",\n    password: \"\",\n  });\n\n  const [profileState, setProfileState] = useState({\n    name: \"\",\n    email: \"\",\n    campaigns: [],\n    token: \"\",\n    id: \"\",\n    isLoggedIn: false,\n  });\n\n  useEffect(fetchUserData, []);\n\n  function fetchUserData() {\n    const token = localStorage.getItem(\"token\");\n    API.getProfile(token).then((profileData) => {\n      if (profileData) {\n        setProfileState({\n          name: profileData.name,\n          email: profileData.email,\n          campaigns: profileData.Campaigns,\n          encounters: profileData.Encounters,\n          token: token,\n          id: profileData.id,\n          isLoggedIn: true,\n        });\n      } else {\n        localStorage.removeItem(\"token\");\n        setProfileState({\n          name: \"\",\n          email: \"\",\n          campaigns: [],\n          token: \"\",\n          id: \"\",\n          isLoggedIn: false,\n        });\n      }\n    });\n  }\n\n  const inputChange = (event) => {\n    const { name, value } = event.target;\n    setloginFormState({\n      ...loginFormState,\n      [name]: value,\n    });\n  };\n\n  const formSubmit = (event) => {\n    event.preventDefault();\n    API.login(loginFormState).then((newToken) => {\n      localStorage.setItem(\"token\", newToken.token);\n      API.getProfile(newToken.token).then((profileData) => {\n        setProfileState({\n          name: profileData.name,\n          email: profileData.email,\n          campaigns: profileData.Campaigns,\n          id: profileData.id,\n          isLoggedIn: true,\n        });\n      });\n    });\n  };\n\n  const deleteCampaign = (id) => {\n    API.deleteCampaign(profileState.token, id).then((data) => {\n      fetchUserData();\n    });\n  };\n\n\n  // State for Beastiary Cards\n  const [monsters, setMonsters] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [query, setQuery] = useState(\"\");\n\n  useEffect(() => {\n    const fetchItems = async () => {\n      const res = await axios(\n        // `https://combattracker-api.herokuapp.com/api/monsters`\n        `http://localhost:5000/api/monsters`\n      );\n      setMonsters(res.data);\n      setIsLoading(false);\n    };\n    fetchItems();\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <Router>\n        <NavigationBar profile={profileState} logout={logout} />\n        <Header />\n        <div class=\"background\">\n          <Container className=\"container\">\n            <br />\n            <Route exact path=\"/\">\n              {profileState.isLoggedIn ? (\n                <Campaigns\n                  profile={profileState}\n                  fetchData={fetchUserData}\n                  delCampaign={deleteCampaign}\n                />\n              ) : (\n                <Landing\n                  profile={profileState}\n                  inputChange={inputChange}\n                  loginFormState={loginFormState}\n                  formSubmit={formSubmit}\n                />\n              )}\n            </Route>\n            <Route exact path=\"/beastiary\">\n              <SearchBar getQuery={(q) => setQuery(q)} />\n              <div className=\"body-bg\">\n                <BestiaryGrid\n                  isLoading={isLoading}\n                  monsters={monsters}\n                  query={query}\n                />\n              </div>\n            </Route>\n            <Route path=\"/campaigns/:id\">\n              <CampaignDetail profile={profileState} />\n            </Route>\n            <Route exact path=\"/newuser\">\n              <NewUser/>\n            </Route>\n          </Container>\n          <br />\n          <Footer />\n        </div>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}