{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\joeya\\\\Desktop\\\\code\\\\local-repos\\\\combat-tracker-front\\\\Client\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from 'axios';\nimport './App.css';\nimport Header from './components/ui/Header';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Container, Form, Button, Row, Col } from 'react-bootstrap';\nimport SearchBar from './components/ui/SearchBar';\nimport BestiaryGrid from './components/beastiary/BestiaryGrid';\nimport Footer from './components/ui/Footer';\nimport API from \"./components/utils/API\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  // State for Login\n  const [loginFormState, setloginFormState] = useState({\n    email: \"\",\n    password: \"\"\n  });\n  const [profileState, setProfileState] = useState({\n    name: '',\n    email: '',\n    campaign: [],\n    isLoggedIn: false\n  });\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    API.getProfile(token).then(profileData => {\n      if (profileData) {\n        setProfileState({\n          name: profileData.name,\n          email: profileData.email,\n          campaign: profileData.Campaign,\n          isLoggedIn: true\n        });\n      }\n    });\n  }, []);\n\n  const inputChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setloginFormState({ ...loginFormState,\n      [name]: value\n    });\n  };\n\n  const formSubmit = event => {\n    event.preventDefault();\n    API.login(loginFormState).then(newToken => {\n      localStorage.setItem('token', newToken.token);\n      API.getProfile(newToken.token).then(profileData => {\n        setProfileState({\n          name: profileData.name,\n          email: profileData.email,\n          campaign: profileData.Campaign,\n          isLoggedIn: true\n        });\n      });\n    });\n  }; // State for Beastiary Cards\n\n\n  const [monsters, setMonsters] = useState([]);\n  const [query, setQuery] = useState('');\n  useEffect(() => {\n    const fetchItems = async () => {\n      const res = await axios(`/api/monsters`);\n      setMonsters(res.data);\n    };\n\n    fetchItems();\n  }, []); // console.log(monsters)\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"background\",\n      children: [/*#__PURE__*/_jsxDEV(Container, {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            md: {\n              span: 4,\n              offset: 4\n            },\n            children: /*#__PURE__*/_jsxDEV(Form, {\n              onSubmit: formSubmit,\n              children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                controlId: \"formBasicEmail\",\n                children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                  onChange: inputChange,\n                  value: loginFormState.email,\n                  type: \"text\",\n                  name: \"email\",\n                  placeholder: \"Enter email\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 88,\n                  columnNumber: 15\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                controlId: \"formBasicPassword\",\n                children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                  onChange: inputChange,\n                  value: loginFormState.password,\n                  type: \"password\",\n                  name: \"password\",\n                  placeholder: \"password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 97,\n                  columnNumber: 15\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"primary\",\n                type: \"submit\",\n                value: \"login\",\n                children: \"Submit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"sE/HSnFTwT7LE3ZIkxwWYq94TgU=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/joeya/Desktop/code/local-repos/combat-tracker-front/Client/src/App.js"],"names":["React","useState","useEffect","axios","Header","Container","Form","Button","Row","Col","SearchBar","BestiaryGrid","Footer","API","App","loginFormState","setloginFormState","email","password","profileState","setProfileState","name","campaign","isLoggedIn","token","localStorage","getItem","getProfile","then","profileData","Campaign","inputChange","event","value","target","formSubmit","preventDefault","login","newToken","setItem","monsters","setMonsters","query","setQuery","fetchItems","res","data","span","offset"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from 'axios';\nimport './App.css';\nimport Header from './components/ui/Header'\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Container, Form, Button, Row, Col } from 'react-bootstrap';\nimport SearchBar from './components/ui/SearchBar';\nimport BestiaryGrid from './components/beastiary/BestiaryGrid';\nimport Footer from './components/ui/Footer';\nimport API from \"./components/utils/API\";\n\n\nfunction App() {\n  // State for Login\n  const [loginFormState, setloginFormState] = useState({\n    email: \"\",\n    password: \"\",\n  });\n\n  const [profileState,setProfileState]=useState({\n    name:'',\n    email:'',\n    campaign:[],\n    isLoggedIn:false\n  })\n\n  useEffect(()=>{\n    const token = localStorage.getItem('token');\n    API.getProfile(token).then(profileData=>{\n      if(profileData){\n        setProfileState({\n          name:profileData.name,\n          email:profileData.email,\n          campaign:profileData.Campaign,\n          isLoggedIn:true\n        })\n      }\n    })\n  },[])\n\n  const inputChange = (event) => {\n    const { name, value } = event.target;\n    setloginFormState({\n      ...loginFormState,\n      [name]: value,\n    });\n  };\n\n  const formSubmit = event=>{\n    event.preventDefault();\n    API.login(loginFormState).then(newToken=>{\n      localStorage.setItem('token',newToken.token)\n      API.getProfile(newToken.token).then(profileData=>{\n        setProfileState({\n          name:profileData.name,\n          email:profileData.email,\n          campaign:profileData.Campaign,\n          isLoggedIn:true\n        })\n      })\n    })\n  } \n  // State for Beastiary Cards\n  const [monsters, setMonsters] = useState([]);\n  const [query, setQuery] = useState('')\n  \n  useEffect(() => {\n    const fetchItems = async () => {\n      const res = await axios(`/api/monsters`)\n      setMonsters(res.data)\n    };\n    fetchItems()\n  }, [])\n  \n  // console.log(monsters)\n  \n  return (\n    <div className=\"App\">\n      <Header />\n      <div class=\"background\">\n      <Container className=\"container\">\n        <br />\n        \n        <Row>\n        <Col md={{ span: 4, offset: 4 }}>\n          <Form onSubmit={formSubmit}>\n            <Form.Group controlId=\"formBasicEmail\">\n              <Form.Control\n                onChange={inputChange}\n                value={loginFormState.email}\n                type=\"text\"\n                name=\"email\"\n                placeholder=\"Enter email\"\n              />\n            </Form.Group>\n            <Form.Group controlId=\"formBasicPassword\">\n              <Form.Control\n                onChange={inputChange}\n                value={loginFormState.password}\n                type=\"password\"\n                name=\"password\"\n                placeholder=\"password\"\n              />\n            </Form.Group>\n            <Button variant=\"primary\" type=\"submit\" value=\"login\">\n              Submit\n            </Button>\n          </Form>\n        </Col>\n      </Row>\n\n\n        {/* <SearchBar getQuery={(q) => setQuery(q)} />\n        <div className=\"body-bg\">\n          <BestiaryGrid monsters={monsters} query={query}/>\n        </div> */}\n      </Container>\n      <br />\n      <Footer />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}