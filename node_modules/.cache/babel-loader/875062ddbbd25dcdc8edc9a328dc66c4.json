{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\joeya\\\\Desktop\\\\code\\\\local-repos\\\\combat-tracker-front\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from 'axios';\nimport './App.css';\nimport Header from './components/ui/Header';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Container, Form, Button, Row, Col } from 'react-bootstrap';\nimport SearchBar from './components/ui/SearchBar';\nimport BestiaryGrid from './components/beastiary/BestiaryGrid';\nimport Footer from './components/ui/Footer';\nimport API from \"./components/utils/API\";\nimport Landing from \"./components/landing/Landing\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  // login state\n  const [loginFormState, setloginFormState] = useState({\n    email: \"\",\n    password: \"\"\n  });\n  const [profileState, setProfileState] = useState({\n    name: '',\n    email: '',\n    campaigns: [],\n    isLoggedIn: false\n  });\n  useEffect(fetchUserData, []);\n\n  function fetchUserData() {\n    const token = localStorage.getItem('token');\n    API.getProfile(token).then(profileData => {\n      if (profileData) {\n        setProfileState({\n          name: profileData.name,\n          email: profileData.email,\n          campaigns: profileData.Campaigns,\n          encounter: profileData.Encounters,\n          token: token,\n          id: profileData.id,\n          isLoggedIn: true\n        });\n      } else {\n        localStorage.removeItem('token');\n        setProfileState({});\n      }\n    });\n  } // State for Beastiary Cards\n\n\n  const [monsters, setMonsters] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [query, setQuery] = useState('');\n  const token = localStorage.getItem('token');\n  useEffect(() => {\n    const fetchItems = async () => {\n      const res = await axios(`https://combattracker-api.herokuapp.com/api/monsters`);\n      setMonsters(res.data);\n      setIsLoading(false);\n    };\n\n    fetchItems();\n  }, []); // console.log(monsters)\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"background\",\n      children: [/*#__PURE__*/_jsxDEV(Container, {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(Landing, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(SearchBar, {\n          getQuery: q => setQuery(q)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"body-bg\",\n          children: /*#__PURE__*/_jsxDEV(BestiaryGrid, {\n            isLoading: isLoading,\n            monsters: monsters,\n            query: query\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"waNvHjZTQ0tYPgF6gYFZSIuKnrM=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/joeya/Desktop/code/local-repos/combat-tracker-front/src/App.js"],"names":["React","useState","useEffect","axios","Header","Container","Form","Button","Row","Col","SearchBar","BestiaryGrid","Footer","API","Landing","App","loginFormState","setloginFormState","email","password","profileState","setProfileState","name","campaigns","isLoggedIn","fetchUserData","token","localStorage","getItem","getProfile","then","profileData","Campaigns","encounter","Encounters","id","removeItem","monsters","setMonsters","isLoading","setIsLoading","query","setQuery","fetchItems","res","data","q"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from 'axios';\nimport './App.css';\nimport Header from './components/ui/Header'\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Container, Form, Button, Row, Col } from 'react-bootstrap';\nimport SearchBar from './components/ui/SearchBar';\nimport BestiaryGrid from './components/beastiary/BestiaryGrid';\nimport Footer from './components/ui/Footer';\nimport API from \"./components/utils/API\";\nimport Landing from \"./components/landing/Landing\";\n\n\nfunction App() {\n  // login state\n  const [loginFormState, setloginFormState] = useState({\n    email: \"\",\n    password: \"\",\n  });\n\n  const [profileState,setProfileState]=useState({\n    name:'',\n    email:'',\n    campaigns:[],\n    isLoggedIn:false\n  })\n\n  useEffect(fetchUserData, []);\n\n  function fetchUserData() {\n    const token = localStorage.getItem('token');\n    API.getProfile(token).then((profileData)=> {\n      if (profileData) {\n        setProfileState({\n          name:profileData.name,\n          email:profileData.email,\n          campaigns:profileData.Campaigns,\n          encounter: profileData.Encounters,\n          token: token,\n          id: profileData.id,\n          isLoggedIn: true,\n        })\n      }else{\n        localStorage.removeItem('token');\n        setProfileState({\n          \n        })\n      }\n    })\n  }\n\n  // State for Beastiary Cards\n  const [monsters, setMonsters] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [query, setQuery] = useState('')\n  \n  const token = localStorage.getItem('token')\n\n  useEffect(() => {\n    const fetchItems = async () => {\n      const res = await axios(`https://combattracker-api.herokuapp.com/api/monsters`)\n      setMonsters(res.data)\n      setIsLoading(false)\n    };\n    fetchItems()\n  }, [])\n  \n  // console.log(monsters)\n  \n  return (\n    <div className=\"App\">\n      <Header />\n      <div class=\"background\">\n      <Container className=\"container\">\n        <Landing  />\n        <br />\n        <SearchBar getQuery={(q) => setQuery(q)} />\n        <div className=\"body-bg\">\n          <BestiaryGrid isLoading={isLoading} monsters={monsters} query={query}/>\n        </div>\n      </Container>\n      <br />\n      <Footer />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}