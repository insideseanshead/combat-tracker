{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\joeya\\\\Desktop\\\\code\\\\local-repos\\\\combat-tracker-front\\\\Client\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from 'axios';\nimport './App.css';\nimport Header from './components/ui/Header';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Container, Form, Button, Row, Col } from 'react-bootstrap';\nimport SearchBar from './components/ui/SearchBar';\nimport BestiaryGrid from './components/beastiary/BestiaryGrid';\nimport Footer from './components/ui/Footer';\nimport API from \"./components/utils/API\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  // State for Login\n  const [loginFormState, setloginFormState] = useState({\n    email: \"\",\n    password: \"\"\n  });\n  const [profileState, setProfileState] = useState({\n    name: '',\n    email: '',\n    campaigns: [],\n    isLoggedIn: false\n  });\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    API.getProfile(token).then(profileData => {\n      if (profileData) {\n        setProfileState({\n          name: profileData.name,\n          email: profileData.email,\n          campaigns: profileData.Campaigns,\n          isLoggedIn: true\n        });\n      } else {\n        localStorage.removeItem('token');\n        setProfileState({\n          name: \"\",\n          email: \"\",\n          tanks: [],\n          isLoggedIn: false\n        });\n      }\n    });\n  }, []);\n\n  const inputChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setloginFormState({ ...loginFormState,\n      [name]: value\n    });\n  };\n\n  const formSubmit = event => {\n    event.preventDefault();\n    API.login(loginFormState).then(newToken => {\n      localStorage.setItem('token', newToken.token);\n      API.getProfile(newToken.token).then(profileData => {\n        setProfileState({\n          name: profileData.name,\n          email: profileData.email,\n          campaigns: profileData.Campaigns,\n          isLoggedIn: true\n        });\n        console.log(profileData);\n      });\n    });\n  }; // State for Beastiary Cards\n\n\n  const [monsters, setMonsters] = useState([]);\n  const [query, setQuery] = useState('');\n  useEffect(() => {\n    const fetchItems = async () => {\n      const res = await axios(`https://combattracker-api.herokuapp.com//api/monsters`);\n      setMonsters(res.data);\n    };\n\n    fetchItems();\n  }, []); // console.log(monsters)\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"background\",\n      children: [/*#__PURE__*/_jsxDEV(Container, {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"BwiUbBb2Ww8SsllTEHWiJRImeuM=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/joeya/Desktop/code/local-repos/combat-tracker-front/Client/src/App.js"],"names":["React","useState","useEffect","axios","Header","Container","Form","Button","Row","Col","SearchBar","BestiaryGrid","Footer","API","App","loginFormState","setloginFormState","email","password","profileState","setProfileState","name","campaigns","isLoggedIn","token","localStorage","getItem","getProfile","then","profileData","Campaigns","removeItem","tanks","inputChange","event","value","target","formSubmit","preventDefault","login","newToken","setItem","console","log","monsters","setMonsters","query","setQuery","fetchItems","res","data"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from 'axios';\nimport './App.css';\nimport Header from './components/ui/Header'\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Container, Form, Button, Row, Col } from 'react-bootstrap';\nimport SearchBar from './components/ui/SearchBar';\nimport BestiaryGrid from './components/beastiary/BestiaryGrid';\nimport Footer from './components/ui/Footer';\nimport API from \"./components/utils/API\";\n\n\nfunction App() {\n  // State for Login\n  const [loginFormState, setloginFormState] = useState({\n    email: \"\",\n    password: \"\",\n  });\n\n  const [profileState,setProfileState]=useState({\n    name:'',\n    email:'',\n    campaigns:[],\n    isLoggedIn:false\n  })\n\n  useEffect(()=>{\n    const token = localStorage.getItem('token');\n    API.getProfile(token).then(profileData=>{\n      if(profileData){\n        setProfileState({\n          name:profileData.name,\n          email:profileData.email,\n          campaigns:profileData.Campaigns,\n          isLoggedIn:true\n        })\n      } else {\n        localStorage.removeItem('token');\n        setProfileState({\n          name: \"\",\n          email: \"\",\n          tanks: [],\n          isLoggedIn: false,\n        })\n      }\n    })\n  },[])\n\n  const inputChange = (event) => {\n    const { name, value } = event.target;\n    setloginFormState({\n      ...loginFormState,\n      [name]: value,\n    });\n  };\n\n  const formSubmit = event=>{\n    event.preventDefault();\n    API.login(loginFormState).then(newToken=>{\n      localStorage.setItem('token',newToken.token)\n      API.getProfile(newToken.token).then(profileData=>{\n        setProfileState({\n          name:profileData.name,\n          email:profileData.email,\n          campaigns:profileData.Campaigns,\n          isLoggedIn:true\n        })\n        console.log(profileData)\n      })\n    })\n  } \n  // State for Beastiary Cards\n  const [monsters, setMonsters] = useState([]);\n  const [query, setQuery] = useState('')\n  \n  useEffect(() => {\n    const fetchItems = async () => {\n      const res = await axios(`https://combattracker-api.herokuapp.com//api/monsters`)\n      setMonsters(res.data)\n    };\n    fetchItems()\n  }, [])\n  \n  // console.log(monsters)\n  \n  return (\n    <div className=\"App\">\n      <Header />\n      <div class=\"background\">\n      <Container className=\"container\">\n        <br />\n        \n        {/* <Row>\n        <Col md={{ span: 4, offset: 4 }}>\n          <Form onSubmit={formSubmit}>\n            <Form.Group controlId=\"formBasicEmail\">\n              <Form.Control\n                onChange={inputChange}\n                value={loginFormState.email}\n                type=\"text\"\n                name=\"email\"\n                placeholder=\"Enter email\"\n              />\n            </Form.Group>\n            <Form.Group controlId=\"formBasicPassword\">\n              <Form.Control\n                onChange={inputChange}\n                value={loginFormState.password}\n                type=\"password\"\n                name=\"password\"\n                placeholder=\"password\"\n              />\n            </Form.Group>\n            <Button variant=\"primary\" type=\"submit\" value=\"login\">\n              Submit\n            </Button>\n          </Form>\n          {profileState.isLoggedIn?profileState.campaigns.map(campaignObj=><p>{campaignObj.name}</p>):<h1>log in to see your campaigns</h1>}\n        </Col>\n      </Row> */}\n\n\n        {/* <SearchBar getQuery={(q) => setQuery(q)} />\n        <div className=\"body-bg\">\n          <BestiaryGrid monsters={monsters} query={query}/>\n        </div> */}\n      </Container>\n      <br />\n      <Footer />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}