{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\joeya\\\\Desktop\\\\code\\\\local-repos\\\\combat-tracker-front\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"./App.css\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Header from \"./components/ui/Header\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Container, Form, Button, Row, Col } from \"react-bootstrap\";\nimport SearchBar from \"./components/ui/SearchBar\";\nimport BestiaryGrid from \"./components/beastiary/BestiaryGrid\";\nimport Footer from \"./components/ui/Footer\";\nimport API from \"./components/utils/API\";\nimport Landing from \"./components/landing/Landing\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  // login state\n  const [loginFormState, setloginFormState] = useState({\n    email: \"\",\n    password: \"\"\n  });\n  const [profileState, setProfileState] = useState({\n    name: \"\",\n    email: \"\",\n    token: \"\",\n    id: \"\",\n    isLoggedIn: false\n  });\n  useEffect(fetchUserData, []);\n\n  function fetchUserData() {\n    const token = localStorage.getItem(\"token\");\n    API.getProfile(token).then(profileData => {\n      if (profileData) {\n        setProfileState({\n          name: profileData.name,\n          email: profileData.email,\n          token: token,\n          id: profileData.id,\n          isLoggedIn: true\n        });\n      } else {\n        localStorage.removeItem(\"token\");\n        setProfileState({\n          name: \"\",\n          email: \"\",\n          token: \"\",\n          id: \"\",\n          isLoggedIn: false\n        });\n      }\n    });\n  }\n\n  const inputChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setloginFormState({ ...loginFormState,\n      [name]: value\n    });\n  };\n\n  const formSubmit = event => {\n    event.preventDefault();\n    API.login(loginFormState).then(newToken => {\n      localStorage.setItem(\"token\", newToken.token);\n      API.getProfile(newToken.token).then(profileData => {\n        setProfileState({\n          name: profileData.name,\n          email: profileData.email,\n          id: profileData.id,\n          isLoggedIn: true\n        });\n      });\n    });\n  }; // const [loginFormState, setloginFormState] = useState({\n  //   email: \"\",\n  //   password: \"\",\n  // });\n  // const [profileState, setProfileState] = useState({\n  //   name: \"\",\n  //   email: \"\",\n  //   // campaigns: [],\n  //   token: \"\",\n  //   id: \"\",\n  //   isLoggedIn: false,\n  // });\n  // useEffect(fetchUserData, []);\n  // function fetchUserData() {\n  //   const token = localStorage.getItem(\"token\");\n  //   API.getProfile(token).then((profileData) => {\n  //     if (profileData) {\n  //       setProfileState({\n  //         name: profileData.name,\n  //         email: profileData.email,\n  //         // campaigns: profileData.Campaigns,\n  //         // encounters: profileData.Encounters,\n  //         token: token,\n  //         id: profileData.id,\n  //         isLoggedIn: true,\n  //       });\n  //     } else {\n  //       localStorage.removeItem(\"token\");\n  //       setProfileState({\n  //         name: \"\",\n  //         email: \"\",\n  //         // campaigns: [],\n  //         token: \"\",\n  //         id: \"\",\n  //         isLoggedIn: false,\n  //       });\n  //     }\n  //   });\n  // }\n  // const inputChange = (event) => {\n  //   const { name, value } = event.target;\n  //   setloginFormState({\n  //     ...loginFormState,\n  //     [name]: value,\n  //   });\n  // };\n  // const formSubmit = (event) => {\n  //   event.preventDefault();\n  //   API.login(loginFormState).then((newToken) => {\n  //     localStorage.setItem(\"token\", newToken.token);\n  //     API.getProfile(newToken.token).then((profileData) => {\n  //       setProfileState({\n  //         name: profileData.name,\n  //         email: profileData.email,\n  //         campaigns: profileData.Campaigns,\n  //         id: profileData.id,\n  //         isLoggedIn: true,\n  //       });\n  //     });\n  //   });\n  // };\n  // State for Beastiary Cards\n\n\n  const [monsters, setMonsters] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [query, setQuery] = useState(\"\");\n  useEffect(() => {\n    const fetchItems = async () => {\n      const res = await axios(`https://combattracker-api.herokuapp.com/api/monsters`);\n      setMonsters(res.data);\n      setIsLoading(false);\n    };\n\n    fetchItems();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"background\",\n        children: [/*#__PURE__*/_jsxDEV(Container, {\n          className: \"container\",\n          children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/\",\n            children: /*#__PURE__*/_jsxDEV(Landing, {\n              profile: profileState,\n              inputChange: inputChange,\n              loginFormState: loginFormState,\n              formSubmit: formSubmit\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/beastiary\",\n            children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n              getQuery: q => setQuery(q)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"body-bg\",\n              children: /*#__PURE__*/_jsxDEV(BestiaryGrid, {\n                isLoading: isLoading,\n                monsters: monsters,\n                query: query\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 164,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"+D/p58OCai17wTQ4+StEhlAizKc=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/joeya/Desktop/code/local-repos/combat-tracker-front/src/App.js"],"names":["React","useState","useEffect","axios","BrowserRouter","Router","Route","Switch","Header","Container","Form","Button","Row","Col","SearchBar","BestiaryGrid","Footer","API","Landing","App","loginFormState","setloginFormState","email","password","profileState","setProfileState","name","token","id","isLoggedIn","fetchUserData","localStorage","getItem","getProfile","then","profileData","removeItem","inputChange","event","value","target","formSubmit","preventDefault","login","newToken","setItem","monsters","setMonsters","isLoading","setIsLoading","query","setQuery","fetchItems","res","data","q"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"./App.css\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Header from \"./components/ui/Header\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Container, Form, Button, Row, Col } from \"react-bootstrap\";\nimport SearchBar from \"./components/ui/SearchBar\";\nimport BestiaryGrid from \"./components/beastiary/BestiaryGrid\";\nimport Footer from \"./components/ui/Footer\";\nimport API from \"./components/utils/API\";\nimport Landing from \"./components/landing/Landing\";\n\nfunction App() {\n  // login state\n  \n  const [loginFormState, setloginFormState] = useState({\n    email: \"\",\n    password: \"\",\n  });\n\n  const [profileState, setProfileState] = useState({\n    name: \"\",\n    email: \"\",\n    token: \"\",\n    id: \"\",\n    isLoggedIn: false,\n  });\n\n  useEffect(fetchUserData, []);\n\n  function fetchUserData() {\n    const token = localStorage.getItem(\"token\");\n    API.getProfile(token).then((profileData) => {\n      if (profileData) {\n        setProfileState({\n          name: profileData.name,\n          email: profileData.email,\n          token: token,\n          id: profileData.id,\n          isLoggedIn: true,\n        });\n      } else {\n        localStorage.removeItem(\"token\");\n        setProfileState({\n          name: \"\",\n          email: \"\",\n          token: \"\",\n          id: \"\",\n          isLoggedIn: false,\n        });\n      }\n    });\n  }\n\n  const inputChange = (event) => {\n    const { name, value } = event.target;\n    setloginFormState({\n      ...loginFormState,\n      [name]: value,\n    });\n  };\n\n  const formSubmit = (event) => {\n    event.preventDefault();\n    API.login(loginFormState).then((newToken) => {\n      localStorage.setItem(\"token\", newToken.token);\n      API.getProfile(newToken.token).then((profileData) => {\n        setProfileState({\n          name: profileData.name,\n          email: profileData.email,\n          id: profileData.id,\n          isLoggedIn: true,\n        });\n      });\n    });\n  };\n  \n  \n  // const [loginFormState, setloginFormState] = useState({\n  //   email: \"\",\n  //   password: \"\",\n  // });\n\n  // const [profileState, setProfileState] = useState({\n  //   name: \"\",\n  //   email: \"\",\n  //   // campaigns: [],\n  //   token: \"\",\n  //   id: \"\",\n  //   isLoggedIn: false,\n  // });\n\n  // useEffect(fetchUserData, []);\n\n  // function fetchUserData() {\n  //   const token = localStorage.getItem(\"token\");\n  //   API.getProfile(token).then((profileData) => {\n  //     if (profileData) {\n  //       setProfileState({\n  //         name: profileData.name,\n  //         email: profileData.email,\n  //         // campaigns: profileData.Campaigns,\n  //         // encounters: profileData.Encounters,\n  //         token: token,\n  //         id: profileData.id,\n  //         isLoggedIn: true,\n  //       });\n  //     } else {\n  //       localStorage.removeItem(\"token\");\n  //       setProfileState({\n  //         name: \"\",\n  //         email: \"\",\n  //         // campaigns: [],\n  //         token: \"\",\n  //         id: \"\",\n  //         isLoggedIn: false,\n  //       });\n  //     }\n  //   });\n  // }\n\n  // const inputChange = (event) => {\n  //   const { name, value } = event.target;\n  //   setloginFormState({\n  //     ...loginFormState,\n  //     [name]: value,\n  //   });\n  // };\n\n  // const formSubmit = (event) => {\n  //   event.preventDefault();\n  //   API.login(loginFormState).then((newToken) => {\n  //     localStorage.setItem(\"token\", newToken.token);\n  //     API.getProfile(newToken.token).then((profileData) => {\n  //       setProfileState({\n  //         name: profileData.name,\n  //         email: profileData.email,\n  //         campaigns: profileData.Campaigns,\n  //         id: profileData.id,\n  //         isLoggedIn: true,\n  //       });\n  //     });\n  //   });\n  // };\n\n  // State for Beastiary Cards\n  const [monsters, setMonsters] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [query, setQuery] = useState(\"\");\n\n  useEffect(() => {\n    const fetchItems = async () => {\n      const res = await axios(\n        `https://combattracker-api.herokuapp.com/api/monsters`\n      );\n      setMonsters(res.data);\n      setIsLoading(false);\n    };\n    fetchItems();\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <Router>\n        <Header />\n        <div class=\"background\">\n          <Container className=\"container\">\n            <br />\n            <Route exact path=\"/\">\n              <Landing\n                profile={profileState}\n                inputChange={inputChange}\n                loginFormState={loginFormState}\n                formSubmit={formSubmit}\n              />\n            </Route>\n            <Route exact path=\"/beastiary\">\n              <SearchBar getQuery={(q) => setQuery(q)} />\n              <div className=\"body-bg\">\n                <BestiaryGrid\n                  isLoading={isLoading}\n                  monsters={monsters}\n                  query={query}\n                />\n              </div>\n            </Route>\n          </Container>\n          <br />\n          <Footer />\n        </div>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}